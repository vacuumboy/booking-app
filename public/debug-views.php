<?php
/**
 * –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–±–ª–µ–º —Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è–º–∏ Laravel
 * –î–æ—Å—Ç—É–ø: http://–≤–∞—à-—Å–∞–π—Ç.com/debug-views.php
 */

// –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
chdir(__DIR__ . '/../');

?>
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π Laravel</title>
    <style>
        body { font-family: Arial, sans-serif; margin: 20px; background: #f5f5f5; }
        .container { max-width: 900px; margin: 0 auto; background: white; padding: 20px; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
        .section { margin: 20px 0; padding: 15px; border: 1px solid #ddd; border-radius: 4px; }
        .success { background: #d4edda; border-color: #c3e6cb; color: #155724; }
        .error { background: #f8d7da; border-color: #f5c6cb; color: #721c24; }
        .warning { background: #fff3cd; border-color: #ffeaa7; color: #856404; }
        .info { background: #d1ecf1; border-color: #bee5eb; color: #0c5460; }
        pre { background: #f8f9fa; padding: 10px; border-radius: 4px; overflow-x: auto; }
        .btn { background: #007bff; color: white; padding: 8px 15px; border: none; border-radius: 4px; cursor: pointer; margin: 5px 0; }
        .btn:hover { background: #0056b3; }
    </style>
</head>
<body>
    <div class="container">
        <h1>üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π Laravel</h1>
        
        <?php
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 1: –°—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ artisan
        echo "<div class='section'>";
        echo "<h3>1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ artisan</h3>";
        if (file_exists('artisan')) {
            echo "<div class='success'>‚úì –§–∞–π–ª artisan –Ω–∞–π–¥–µ–Ω</div>";
        } else {
            echo "<div class='error'>‚úó –§–∞–π–ª artisan –ù–ï –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É.</div>";
        }
        echo "</div>";
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 2: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫
        echo "<div class='section'>";
        echo "<h3>2. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–ø–æ–∫</h3>";
        $paths = [
            'resources/views' => '–ü–∞–ø–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π',
            'resources/views/welcome.blade.php' => '–§–∞–π–ª welcome.blade.php',
            'storage/framework/views' => '–ü–∞–ø–∫–∞ —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π',
            'storage/app' => '–ü–∞–ø–∫–∞ storage/app',
            'storage/logs' => '–ü–∞–ø–∫–∞ –ª–æ–≥–æ–≤',
            'bootstrap/cache' => '–ü–∞–ø–∫–∞ bootstrap/cache',
        ];
        
        foreach ($paths as $path => $desc) {
            if (file_exists($path)) {
                echo "<div class='success'>‚úì $desc: $path</div>";
            } else {
                echo "<div class='error'>‚úó $desc –ù–ï –Ω–∞–π–¥–µ–Ω: $path</div>";
            }
        }
        echo "</div>";
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 3: –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
        echo "<div class='section'>";
        echo "<h3>3. –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞</h3>";
        $writablePaths = [
            'storage',
            'storage/app',
            'storage/framework',
            'storage/framework/views',
            'storage/logs',
            'bootstrap/cache',
        ];
        
        foreach ($writablePaths as $path) {
            if (file_exists($path)) {
                if (is_writable($path)) {
                    echo "<div class='success'>‚úì $path - –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏</div>";
                } else {
                    echo "<div class='error'>‚úó $path - –ù–ï –¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –∑–∞–ø–∏—Å–∏ (chmod 755 –∏–ª–∏ 775)</div>";
                }
            } else {
                echo "<div class='warning'>‚ö† $path - –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</div>";
            }
        }
        echo "</div>";
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 4: –°–æ–¥–µ—Ä–∂–∏–º–æ–µ welcome.blade.php
        echo "<div class='section'>";
        echo "<h3>4. –°–æ–¥–µ—Ä–∂–∏–º–æ–µ welcome.blade.php</h3>";
        $welcomePath = 'resources/views/welcome.blade.php';
        if (file_exists($welcomePath)) {
            $content = file_get_contents($welcomePath);
            $lines = substr_count($content, "\n") + 1;
            $size = filesize($welcomePath);
            echo "<div class='success'>‚úì –§–∞–π–ª –Ω–∞–π–¥–µ–Ω</div>";
            echo "<div class='info'>üìÑ –†–∞–∑–º–µ—Ä: $size –±–∞–π—Ç, —Å—Ç—Ä–æ–∫: $lines</div>";
            echo "<pre>" . htmlspecialchars(substr($content, 0, 500)) . "...</pre>";
        } else {
            echo "<div class='error'>‚úó –§–∞–π–ª welcome.blade.php –Ω–µ –Ω–∞–π–¥–µ–Ω!</div>";
        }
        echo "</div>";
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 5: –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        echo "<div class='section'>";
        echo "<h3>5. –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ä–µ–¥–µ</h3>";
        echo "<div class='info'>PHP –≤–µ—Ä—Å–∏—è: " . phpversion() . "</div>";
        echo "<div class='info'>–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: " . getcwd() . "</div>";
        echo "<div class='info'>–î–æ–∫—É–º–µ–Ω—Ç —Ä—É—Ç: " . ($_SERVER['DOCUMENT_ROOT'] ?? '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω') . "</div>";
        echo "<div class='info'>–°–∫—Ä–∏–ø—Ç: " . ($_SERVER['SCRIPT_FILENAME'] ?? '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω') . "</div>";
        echo "</div>";
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 6: Laravel –∫–æ–º–∞–Ω–¥—ã
        echo "<div class='section'>";
        echo "<h3>6. –¢–µ—Å—Ç Laravel –∫–æ–º–∞–Ω–¥</h3>";
        
        if (file_exists('artisan')) {
            $commands = [
                'route:list --name=welcome' => '–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä—à—Ä—É—Ç–∞ welcome',
                'view:clear' => '–û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π',
                'config:show view' => '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π',
            ];
            
            foreach ($commands as $cmd => $desc) {
                echo "<h4>$desc</h4>";
                $output = [];
                $return_var = 0;
                exec("php artisan $cmd 2>&1", $output, $return_var);
                
                if ($return_var === 0) {
                    echo "<div class='success'>‚úì –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ</div>";
                    if (!empty($output)) {
                        echo "<pre>" . htmlspecialchars(implode("\n", $output)) . "</pre>";
                    }
                } else {
                    echo "<div class='error'>‚úó –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã</div>";
                    if (!empty($output)) {
                        echo "<pre>" . htmlspecialchars(implode("\n", $output)) . "</pre>";
                    }
                }
            }
        }
        echo "</div>";
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 7: –õ–æ–≥–∏ –æ—à–∏–±–æ–∫
        echo "<div class='section'>";
        echo "<h3>7. –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –∏–∑ –ª–æ–≥–æ–≤</h3>";
        $logPath = 'storage/logs/laravel.log';
        if (file_exists($logPath)) {
            $logContent = file_get_contents($logPath);
            $lines = explode("\n", $logContent);
            $recentLines = array_slice($lines, -20); // –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫
            
            echo "<div class='info'>–ü–æ–∫–∞–∑–∞–Ω—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫ –∏–∑ –ª–æ–≥–∞:</div>";
            echo "<pre style='max-height: 300px; overflow-y: scroll;'>" . htmlspecialchars(implode("\n", $recentLines)) . "</pre>";
        } else {
            echo "<div class='warning'>‚ö† –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: $logPath</div>";
        }
        echo "</div>";
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ 8: –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
        echo "<div class='section'>";
        echo "<h3>8. –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</h3>";
        echo "<p>–ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –≤ –∫—ç—à–µ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:</p>";
        echo "<form method='post' style='display: inline;'>";
        echo "<button type='submit' name='fix' value='clear' class='btn'>–û—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å –∫—ç—à</button>";
        echo "</form>";
        
        if (isset($_POST['fix']) && $_POST['fix'] === 'clear') {
            echo "<div style='margin-top: 15px;'>";
            echo "<h4>–í—ã–ø–æ–ª–Ω—è—é –æ—á–∏—Å—Ç–∫—É –∫—ç—à–∞...</h4>";
            
            $clearCommands = [
                'config:clear',
                'cache:clear',
                'route:clear',
                'view:clear',
            ];
            
            foreach ($clearCommands as $cmd) {
                $output = [];
                $return_var = 0;
                exec("php artisan $cmd 2>&1", $output, $return_var);
                
                if ($return_var === 0) {
                    echo "<div class='success'>‚úì $cmd - –≤—ã–ø–æ–ª–Ω–µ–Ω–æ</div>";
                } else {
                    echo "<div class='error'>‚úó $cmd - –æ—à–∏–±–∫–∞</div>";
                    if (!empty($output)) {
                        echo "<pre>" . htmlspecialchars(implode("\n", $output)) . "</pre>";
                    }
                }
            }
            
            echo "<div class='info'>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–∞–π—Ç–∞.</div>";
            echo "</div>";
        }
        echo "</div>";
        
        ?>
        
        <div class="section info">
            <h3>üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</h3>
            <ul>
                <li>–ï—Å–ª–∏ —Ñ–∞–π–ª welcome.blade.php —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –Ω–æ –æ—à–∏–±–∫–∞ –æ—Å—Ç–∞–µ—Ç—Å—è - –æ—á–∏—Å—Ç–∏—Ç–µ –∫—ç—à</li>
                <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–ø–∫–∞–º storage –∏ bootstrap/cache</li>
                <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ .env —Ñ–∞–π–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ</li>
                <li>–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –æ—à–∏–±–æ–∫</li>
                <li>–ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è —É–¥–∞–ª–∏—Ç–µ —ç—Ç–æ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª</li>
            </ul>
        </div>
        
        <p><small>‚ö†Ô∏è <strong>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</strong> –£–¥–∞–ª–∏—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ—Å–ª–µ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏!</small></p>
    </div>
</body>
</html>

